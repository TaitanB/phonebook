{"version":3,"file":"static/js/232.ee2a2934.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/ContactsForm/ContactsForm.styled.js","components/ContactsForm/ContactsForm.jsx","components/ContactsFilter/ContactsFilter.styled.js","components/ContactsFilter/ContactsFilter.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.js"],"sourcesContent":["export const getAllContacts = state => state.contacts.items;\n\nexport const Filtered = state => state.filter;\n\nexport const getFilteredContacts = state => {\n  if (!state.filter) {\n    return state.contacts.items;\n  }\n  const result = state.contacts.items.filter(({ name }) => {\n    return name.toLowerCase().includes(state.filter.toLowerCase());\n  });\n  return result;\n};\n\nexport const selectLoading = state => state.contacts.loading;\n","import styled from 'styled-components';\n\nexport const Wraper = styled.div`\n  border-radius: 20px;\n  background-color: #ffffff75;\n  width: 480px;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n\n  > div {\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 36px;\n  margin: 0 auto;\n  margin-bottom: 10px;\n`;\n\nexport const ContactList = styled.ul`\n  width: 440px;\n  display: grid;\n  max-height: 60vh;\n  overflow: auto;\n  align-items: center;\n  padding: 20px;\n  gap: 10px;\n  margin: 0 auto 0 0;\n\n  &::-webkit-scrollbar {\n    width: 5px;\n  }\n  &::-webkit-scrollbar-track {\n    background-color: #21212175;\n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: #0303ab;\n  }\n`;\n\nexport const BtnContact = styled.button`\n  padding: 5px 10px;\n  border: 1px solid #0303ab;\n  border-radius: 5px;\n  background-color: #0303ab;\n  color: rgb(213 239 230);\n  font-weight: 700;\n  box-shadow: 0px 10px 10px rgba(0, 0, 0, 0.4);\n\n  :hover,\n  :focus {\n    background-color: rgb(171 38 3);\n    border: 1px solid rgb(171 38 3);\n    scale: 0.9;\n  }\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 10px;\n  width: 100%;\n  padding-bottom: 10px;\n  border-bottom: 1px dashed #0303ab;\n\n  p {\n    font-weight: 500;\n    padding: 5px;\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    gap: 10px;\n  }\n`;\n\nexport const FilteredContacts = styled.div`\n  font-weight: 500;\n  padding-top: 20px;\n  margin-left: 20px;\n`;\n\nexport const AllContacts = styled.div`\n  font-weight: 500;\n  padding-top: 20px;\n  margin-left: 20px;\n`;\n\nexport const NoContacts = styled.div`\n  width: 440px;\n  display: grid;\n  height: 60vh;\n  align-items: center;\n  padding: 20px;\n  font-weight: 600;\n  font-size: 22px;\n  color: rgb(232 238 245);\n  justify-content: center;\n  border-radius: 20px;\n  background-color: #21212175;\n  opacity: 0.85;\n\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n\n// Kayla Bosco\n// 466-902-2908\n\n// Darnell Rowe\n// 788-356-5397\n\n// Ramon Nader\n// 626-751-7002\n\n// Lamar Gibson\n// 357-364-0910\n\n// Diane Thompson\n// 382-401-1371\n\n// Leslie Rosenbaum\n// 707-287-8072\n\n// Jaime West\n// 774-307-1728\n\n// Angelica Hermiston\n// 456-840-4107\n\n// Terence Buckridge\n// 273-799-8729\n\n// Virginia Pacocha\n// 293-368-0908\n\n// Andrew Littel\n// 293-368-0908\n\n// Rosie Simpson\n// 227-91-26\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport propTypes from 'prop-types';\n\nimport {\n  getFilteredContacts,\n  getAllContacts,\n} from '../../redux/contacts/selectors';\nimport { fetchDeleteContact } from '../../redux/contacts/operations';\n\nimport {\n  BtnContact,\n  ContactItem,\n  AllContacts,\n  FilteredContacts,\n  ContactList,\n  Wraper,\n  Title,\n  NoContacts,\n} from './ContactsList.styled';\n\nimport noContacts from '../../image/noContacts.jpg';\n\nconst ContactsList = filter => {\n  const filteredContacts = useSelector(getFilteredContacts);\n  const allContacts = useSelector(getAllContacts);\n\n  const dispatch = useDispatch();\n\n  const deleteContact = id => {\n    dispatch(fetchDeleteContact(id));\n  };\n\n  return (\n    <Wraper>\n      <div>\n        <Title>Your contacts</Title>\n        {allContacts.length !== 0 ? (\n          <ContactList>\n            {filteredContacts.map(({ id, name, number }) => {\n              return (\n                <ContactItem key={id} id={id}>\n                  <p>\n                    {name} <b>{number}</b>\n                  </p>\n                  <BtnContact\n                    type=\"BtnContact\"\n                    onClick={() => deleteContact(id)}\n                  >\n                    Delete\n                  </BtnContact>\n                </ContactItem>\n              );\n            })}\n          </ContactList>\n        ) : (\n          <NoContacts style={{ backgroundImage: `url(${noContacts})` }}>\n            You have not added any contacts yet...\n          </NoContacts>\n        )}\n      </div>\n\n      <div>\n        <AllContacts>\n          All contacts: <b>{allContacts.length}</b>\n        </AllContacts>\n        {filter.filter && (\n          <FilteredContacts>\n            Filtered contacts: <b>{filteredContacts.length}</b>\n          </FilteredContacts>\n        )}\n      </div>\n    </Wraper>\n  );\n};\n\nContactsList.propTypes = {\n  filter: propTypes.string.isRequired,\n};\n\nexport default ContactsList;\n","import styled from 'styled-components';\n\nexport const FormAddContact = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  width: 480px;\n  padding: 20px;\n  border-radius: 20px;\n  background-color: #ffffff75;\n  margin: 0 0 0 auto;\n  justify-content: center;\n`;\n\nexport const FormTitle = styled.h2`\n  font-weight: 600;\n  font-size: 26px;\n  align-items: center;\n  margin: 0 auto;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-weight: 500;\n  width: 300px;\n  font-size: 20px;\n  align-items: center;\n  margin: 0 auto;\n  justify-content: space-between;\n`;\n\nexport const Input = styled.input`\n  background-color: rgba(213, 222, 239, 0.8);\n  border-radius: 5px;\n  padding: 5px;\n  box-shadow: inset rgba(0, 0, 1, 0.2) 0 0 3px 3px;\n`;\n\nexport const BtnContact = styled.button`\n  margin: 20px auto;\n  padding: 5px 10px;\n  border-radius: 5px;\n  background-color: #0303ab;\n  color: rgb(213 239 230);\n  font-weight: 700;\n  box-shadow: 0px 10px 10px rgba(0, 0, 0, 0.4);\n\n  :hover,\n  :focus {\n    background-color: green;\n    scale: 0.9;\n  }\n`;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { fetchAddContact } from '../../redux/contacts/operations';\n\nimport {\n  FormAddContact,\n  Label,\n  Input,\n  BtnContact,\n  FormTitle,\n} from './ContactsForm.styled';\n\nexport default function ContactsForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    dispatch(fetchAddContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormAddContact onSubmit={handleSubmit}>\n      <FormTitle>Add a new contact?</FormTitle>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </Label>\n      <BtnContact type=\"submit\">Add contact</BtnContact>\n    </FormAddContact>\n  );\n}\n","import styled from 'styled-components';\n\nexport const FilterWraper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  width: 480px;\n  padding: 20px;\n  border-radius: 20px;\n  background-color: #ffffff75;\n  margin: 0 0 0 auto;\n  justify-content: center;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-weight: 500;\n  font-size: 20px;\n  align-items: center;\n  margin: 0 auto;\n  justify-content: space-between;\n`;\n\nexport const Input = styled.input`\n  background-color: rgba(213, 222, 239, 0.8);\n  border-radius: 5px;\n  padding: 5px;\n  box-shadow: inset rgba(0, 0, 1, 0.2) 0 0 3px 3px;\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport propTypes from 'prop-types';\n\nimport { getFilter } from '../../redux/contacts/filterSlice';\n\nimport { Label, Input, FilterWraper } from './ContactsFilter.styled';\n\nconst ContactsFilter = filter => {\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = event => {\n    const { value } = event.currentTarget;\n    dispatch(getFilter(value));\n  };\n\n  return (\n    <FilterWraper>\n      <Label>\n        Find contacts by name\n        <Input type=\"text\" name={filter} onChange={handleChangeFilter} />\n      </Label>\n    </FilterWraper>\n  );\n};\n\nContactsFilter.propTypes = {\n  filter: propTypes.string.isRequired,\n};\n\nexport default ContactsFilter;\n","import styled from 'styled-components';\n\nexport const ContactsContainer = styled.div`\n  display: grid;\n  gap: 20px;\n  height: 100vh;\n  padding: 20px;\n  grid-template-columns: repeat(2, 1fr);\n\n  background-color: rgba(66, 75, 92, 0.5);\n  background-position: center bottom;\n  background-repeat: no-repeat;\n  background-size: cover;\n\n  > :first-child {\n    grid-row: 1/1;\n  }\n\n  > :nth-child(2) {\n    grid-row: 2/2;\n  }\n\n  > :last-child {\n    grid-row: 1/3;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\n\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport ContactsForm from 'components/ContactsForm/ContactsForm';\nimport ContactsFilter from 'components/ContactsFilter/ContactsFilter';\n\nimport { fetchAllContacts } from 'redux/contacts/operations';\nimport { Filtered } from '../../redux/contacts/selectors';\n\nimport { ContactsContainer } from './Contacts.styled';\nimport bgContacts from '../../image/bgContacts.jpg';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  const filterValue = useSelector(Filtered);\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactsContainer style={{ backgroundImage: `url(${bgContacts})` }}>\n        <ContactsForm />\n        <ContactsFilter filter={filterValue} />\n        <ContactsList filter={filterValue} />\n      </ContactsContainer>\n    </HelmetProvider>\n  );\n}\n"],"names":["getAllContacts","state","contacts","items","Filtered","filter","getFilteredContacts","name","toLowerCase","includes","Wraper","styled","Title","ContactList","BtnContact","ContactItem","FilteredContacts","AllContacts","NoContacts","filteredContacts","useSelector","allContacts","dispatch","useDispatch","length","map","id","number","type","onClick","fetchDeleteContact","deleteContact","style","backgroundImage","noContacts","FormAddContact","FormTitle","Label","Input","ContactsForm","useState","setName","setNumber","handleChange","event","currentTarget","value","reset","onSubmit","preventDefault","fetchAddContact","pattern","title","required","onChange","FilterWraper","getFilter","ContactsContainer","Contacts","filterValue","useEffect","fetchAllContacts","bgContacts"],"sourceRoot":""}